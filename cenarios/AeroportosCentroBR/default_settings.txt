

###################################
###    MOBILE COMPUTING 2012	###
### 	    EP 2 - PHASE 1		###
###						###
### 	   Damian Matuszewski		###
###    Guilherme Wachs Lopes	###
###################################


#########################
### Scenario settings ###
#########################

Scenario.name = Damian-Guilherme
Scenario.simulateConnections = true
Scenario.updateInterval = 1
# 86400 = 24h
Scenario.endTime = 86400
Scenario.nrofHostGroups = 6

Report.warmup = 1


##########################
### Interface settings ###
##########################

# "Bluetooth" interface for all nodes
btInterface.type = SimpleBroadcastInterface
# Transmit speed of 16 Mbps = 2MBps
btInterface.transmitSpeed = 2M
btInterface.transmitRange = 1
# ------------------------ btInterface.scanInterval = 120


######################
### Movement model ###
######################

# World's size for Movement Models without implicit size (width, height; originally in meters but we decided to use km - the same for transmition range)
MovementModel.worldSize = 700, 900
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 43200
# seed for movement models' pseudo random number generator (default = 0) the vector values vill generate 5 different reports
MovementModel.rngSeed = [2; 8372; 98092; 18293; 777]


### Map based movement model specific settings
MapBasedMovement.nrofMapFiles = 5
MapBasedMovement.performChecks = true
## Path to our map
#Routes
#SBGR -> SBGL
MapBasedMovement.mapFile1 = data/Damian-Guilherme/route1.wkt
#SBRJ -> SBSP
MapBasedMovement.mapFile2 = data/Damian-Guilherme/route2.wkt
#SBSP -> SBRJ
MapBasedMovement.mapFile3 = data/Damian-Guilherme/route3.wkt
#SBSP -> SBRJ
MapBasedMovement.mapFile4 = data/Damian-Guilherme/route4.wkt
#SBGR -> SBBR
MapBasedMovement.mapFile4 = data/Damian-Guilherme/route5.wkt
#Conections between the routes
MapBasedMovement.mapFile5 = data/Damian-Guilherme/conections.wkt

######################################
### common settings for all groups ###
######################################

Group.movementModel = MapRouteMovement
Group.routeType = 1
Group.router = EpidemicRouter
Group.bufferSize = 150M

# Message TTL of 60 minutes (1 hour)
Group.msgTtl = 60
# All nodes have the bluetooth interface
Group.nrofInterfaces = 1
Group.interface1 = btInterface
# walking speeds: minimum and maximum speeds (km/s) when moving on a path (equivalent to 10 - 260 m/s)
Group.speed = 0.01, 0.26
# waitTime: minimum and maximum wait times (seconds) after reaching destination (5 min - 2 h)
Group.waitTime = 300, 7200
# transmit speed of 2 Mbps = 250kBps
Group.transmitSpeed = 500k
Group.transmitRange = 50
Group.routeFile = data/Damian-Guilherme/route1.wkt

Group.groupID = N
Group.nrofHosts = 50
# ----------------------- Group.nrofHosts = 0
# ----------------------- Group.minGroupSize = 1
# ----------------------- Group.maxGroupSize = 7

# ----------------------- Group.nrOfOffices = 2
# ----------------------- Group.nrOfMeetingSpots = 5
# ----------------------- Group.workDayLength = 43200
# ----------------------- Group.probGoShoppingAfterWork = 0.5
# ----------------------- Group.officeWaitTimeParetoCoeff = 0.5
# ----------------------- Group.officeMinWaitTime = 10
# ----------------------- Group.officeMaxWaitTime = 100000
# ----------------------- Group.officeSize = 100
# ----------------------- Group.minAfterShoppingStopTime = 3600
# ----------------------- Group.maxAfterShoppingStopTime = 7200

# ----------------------- Group.timeDiffSTD = 7200


## Group-specific settings:
# groupID : 	 Group's identifier. Used as the prefix of host names
# nrofHosts: 	 number of hosts in the group 
# movementModel: movement model of the hosts (valid class name from movement package)
# waitTime: 	 minimum and maximum wait times (seconds) after reaching destination
# speed: 	 minimum and maximum speeds (m/s) when moving on a path
# bufferSize: 	 size of the message buffer (bytes)
# router: 	 router used to route messages (valid class name from routing package)
# activeTimes: 	 Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)
# msgTtl : 	 TTL (minutes) of the messages created by this host group, default=infinite

## Group and movement model specific settings
# pois: 	Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )
#      for ShortestPathMapBasedMovement
# okMaps: 	which map nodes are OK for the group (map file indexes), default=all
#      for all MapBasedMovent models
# routeFile: 	route's file path - for MapRouteMovement
# routeType: 	route's type - for MapRouteMovement


############################
### Airplanes Groups A-E ###
############################

Group1.groupID = A
## Number of airplanes travelling along route 1
Group1.nrofHosts = 5
#Group1.movementModel = MapRouteMovement
## Path to the file with route 1
Group1.routeFile = data/Damian-Guilherme/route1.wkt
#Group1.routeType = 1
## Initial position (node) by default - random stop
#Group1.routeFirstStop = 0
Group1.speed = 0.01, 0.26
Group1.waitTime = 300, 7200
Group1.transmitSpeed = 500k
Group1.transmitRange = 50

Group2.groupID = B
Group2.nrofHosts = 5
#Group2.movementModel = MapRouteMovement
Group2.routeFile = data/Damian-Guilherme/route2.wkt
#Group2.routeType = 1
Group2.routeFirstStop = 0
Group2.speed = 0.01, 0.26
Group2.waitTime = 300, 7200
Group2.transmitSpeed = 500k
Group2.transmitRange = 50
#
Group3.groupID = C
Group3.nrofHosts = 5
#Group3.movementModel = MapRouteMovement
Group3.routeFile = data/Damian-Guilherme/route3.wkt
Group3.routeType = 1
#Group3.routeFirstStop = 0
Group3.speed = 0.01, 0.26
Group3.waitTime = 300, 7200
Group3.transmitSpeed = 500k
Group3.transmitRange = 50
#
Group4.groupID = D
Group4.nrofHosts = 5
#Group4.movementModel = MapRouteMovement
Group4.routeFile = data/Damian-Guilherme/route4.wkt
Group4.routeType = 1
#Group4.routeFirstStop = 0
Group4.speed = 0.01, 0.26
Group4.waitTime = 300, 7200
Group4.transmitSpeed = 500k
Group4.transmitRange = 50
#
Group5.groupID = E
Group5.nrofHosts = 5
#Group5.movementModel = MapRouteMovement
Group5.routeFile = data/Damian-Guilherme/route5.wkt
Group5.routeType = 1
#Group5.routeFirstStop = 0
Group5.speed = 0.01, 0.26
Group5.waitTime = 300, 7200
Group5.transmitSpeed = 500k
Group5.transmitRange = 50
#
###############################
### Airport Towers Group T ###
##############################

Group6.groupID = T
Group6.nrofHosts = 6
Group6.bufferSize = 1000M
ExternalMovement.file = data/Damian-Guilherme/TowerMovements.txt
ExternalMovement.nrofPreload = 1
Group6.movementModel = ExternalMovement
Group6.nrofInterfaces = 1
Group6.transmitSpeed = 2M
Group6.transmitRange = 250


###################################
### Message creation parameters ###
###################################
 
# How many event generators
Events.nrof = 1
# Class of the first event generator
Events1.class = MessageEventGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 16 to 20 seconds ~ 200 texts per hour)
Events1.interval = 16,20
# Message sizes (500kB - 1MB)
Events1.size = 500k,1M
# Message size SMS
# Events1.size = 1k
# range of message source/destination addresses - min, max distance sender-receiver
Events1.hosts = 0,6
# Message ID prefix
Events1.prefix = M


###############
### Reports ###
###############
 
## All report names have to be valid report classes
Report.reportDir = [reports/Damian-Guilherme/1; reports/Damian-Guilherme/2; reports/Damian-Guilherme/3; reports/Damian-Guilherme/4; reports/Damian-Guilherme/5]

# how many reports to load
Report.nrofReports = 1
# Report classes to load
Report.report1 = MessageStatsReport
#Report.report2 = ContactTimesReport
#Report.report3 = UniqueEncountersReport
#Report.report4 = TotalEncountersReport
#Report.report5 = EncountersVSUniqueEncountersReport
#Report.report6 = ContactsDuringAnICTReport
#Report.report7 = InterContactTimesReport
#Report.report8 = ContactsPerHourReport
#Report.report9 = AdjacencyGraphvizReport
#Report.report10 = ConnectivityDtnsim2Report
Report.report2 = ConnectivityONEReport
#Report.report12 = DistanceDelayReport
#Report.report13 = MessageGraphvizReport
#Report.report14 = MessageLocationReport
#MessageLocationReport.granularity = 1
#MessageLocationReport.messages = 1


#############################
### Optimization settings ###
#############################

## These affect the speed of the simulation
## see World class for details.
Optimization.connectionAlg = 2
Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true


## Default settings for some routers settings
#ProphetRouter.secondsInTimeUnit = 30
#SprayAndWaitRouter.nrofCopies = 6
#SprayAndWaitRouter.binaryMode = true


###########################################################

## GUI settings

# GUI underlay image settings
#GUI.UnderlayImage.fileName = data/helsinki_underlay.png
# Image offset in pixels (x, y)
#GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
#GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
#GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
#GUI.EventLogPanel.nrofEvents = 200
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$
