+-------------------------------------------------+
| Diogo Haruki Kykuta         nUSP 6879613        |   
| Fernando Omar Aluani        nUSP 6797226        |   
+-------------------------------------------------+
| QUEM NÃO PULA, QUER TARIFA!                     |   
+-------------------------------------------------+

Caso queira executar os tests, basta rodar 'make runtests'

Os reports gerados estão na pasta reports e estão também no final do
relatório.

No relatório encontram-se:
 * detalhamento de cada teste rodado (cenário, padrão de movimentação, etc)
 * análises feitas em cima dos resultados.
 * reports gerados

CENÁRIOS ESCOLHIDOS:
 1) ParqueIbirapuera
   Tempo de simulação: 3600s (1h)
   Grupos: 6
     G1 - Ciclistas
     G2 - Pedestres
     G3 - Cooper People
     G4 - Piquenique 1
     G5 - Piquenique 2
     G6 - Piquenique 3
   Padrões de movimentação usados: MapBasedMovement, ClusterMovement
   Padrões de roteamento usados: ProphetRouter

  2) USP2
    Tempo de simulação: 86400s (24h)
    Grupos: 4
      G1 - Circular 1
      G2 - Circular 2
      G3 - Carros
      G4 - Pedestres
    Padrões de movimentação usados: ShortestPathMapBasedMovement, 
                              MapRouteMoviment
    Padrões de roteamento usados: EpidemicRouter


SIGNIFICADO DOS VALORES NOS REPORTS (do report padrão, MessageStatsReport):
sim_time: tempo que a simulacao ficou rodando (em segundos?)
created: numero de mensagens criadas
started: numero de mensagens que começaram a ser transferidas
relayed: numero de mensagens transferidas com sucesso de um nó a outro
aborted: numero de transferencias de mensagens que foram abortadas antes de completar
dropped: numero de mensagens deletada (droppadas)
removed: numero de mensagens deletada (removida)
delivered: numero de mensagens que foram transferidas e chegaram no destino final.
delivery_prob: porcentagem (em [0,1]) de mensagens entregues ( delivered / created )
response_prob: porcentagem (em [0,1]) de respostas entregues ( deliveredResponses / createdResponses )
    -> note que ele não dá esses stats das respostas. Mas o created/delivered/delivered_prob conta as respostas também.
overhead_ratio: taxa de overhead ( (relayed-delivered)/delivered )
latency_avg: média de latências
latency_med: mediana de latências
    -> latência: tempo da simulação entre a criação e o delivery de uma mensagem.
hopcount_avg: média de hopcounts
hopcount_med: mediana de hopcounts
    -> hopcount: pulos que uma mensagem fez pra chegar ao destino
buffertime_avg: média de buffertime
buffertime_med: mediana de buffertime
    -> buffertime: tempo que a mensagem ficou no buffer? (calculado qdo mensagem é deletada, tempoDaSimulacao - tempoQueMensagemFoiRecebida)
rtt_avg: média de rtt
rtt_med: mediana de rtt
    -> rtt (round trip time): tempo que levou entre a criação de uma mensagem de pedido e o recebimento (no final) da resposta.
